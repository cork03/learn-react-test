[{"/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/index.tsx":"1","/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/reportWebVitals.ts":"2","/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/App.tsx":"3","/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/component/Link.tsx":"4"},{"size":500,"mtime":1611900888609,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1611900897419,"results":"7","hashOfConfig":"6"},{"size":656,"mtime":1612072782362,"results":"8","hashOfConfig":"6"},{"size":682,"mtime":1612072756963,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1up898o",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/index.tsx",[],["20","21","22","23","24"],"/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/reportWebVitals.ts",["25"],"import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/App.tsx",["26"],"/Users/sumiyoshitsubasa/portfolio/learn-react-test/src/component/Link.tsx",["27","28","29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":25,"nodeType":"43","messageId":"44","endLine":3,"endColumn":57},{"ruleId":"41","severity":1,"message":"42","line":6,"column":1,"nodeType":"45","messageId":"44","endLine":6,"endColumn":15},{"ruleId":"41","severity":1,"message":"42","line":8,"column":21,"nodeType":"43","messageId":"44","endLine":8,"endColumn":45},{"ruleId":"41","severity":1,"message":"46","line":8,"column":22,"nodeType":"47","messageId":"48","endLine":8,"endColumn":41},{"ruleId":"49","severity":1,"message":"50","line":8,"column":38,"nodeType":"51","messageId":"52","endLine":8,"endColumn":41,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":23,"column":24,"nodeType":"56","messageId":"57","endLine":23,"endColumn":35},"lines-around-directive",["58"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["59","60"],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements",{"messageId":"61","fix":"62","desc":"63"},{"messageId":"64","fix":"65","desc":"66"},"suggestUnknown",{"range":"67","text":"68"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"67","text":"69"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[155,158],"unknown","never"]